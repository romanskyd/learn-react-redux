{"version":3,"sources":["components/WeatherCard.js","components/WeatherForecast.js","components/SearchPanel.js","config/env.js","api.js","actions.js","constants/index.js","helpers/search.helper.js","App.js","reducers/weather.js","reducers/loading.js","reducers/forecast.js","state.js","index.js"],"names":["WeatherCard","props","temp","parseInt","weather","main","icon","concat","React","createElement","className","name","sys","country","src","alt","title","description","clouds","all","pressure","wind","speed","humidity","type","onClick","getForecast","id","WeatherForecast","data","labels","forecast","list","map","el","dt_txt","datasets","label","backgroundColor","borderColor","x","dt","y","options","display","text","city","legend","padding","scales","xAxes","time","unit","tooltips","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","Line","height","width","SearchPanel","onChange","e","handler","target","value","onFocus","document","getElementById","placeholder","aria-label","aria-describedby","items","key","selectHandler","config","appId","api","GetWeather","_classCallCheck","this","_createClass","axios","get","then","res","ids","loadWeatherByListIds","dispatch","byListIds","loadForecast5DaysById","forecast5DaysById","loadSearchedById","byId","consts","searchedListSize","itemsOnPage","search_helper","SearchHelper","cities","coord","lon","lat","string","str","RegExp","trim","filter","test","toLowerCase","slice","App","_Component","_this","_possibleConstructorReturn","_getPrototypeOf","call","handleClick","bind","_assertThisInitialized","handleSearchInput","handleSelectedCity","state","searched","_inherits","actions","setState","searchHelper","searchByName","_this2","loading","role","weatherList","item","weatherForecast","Component","connect","bindActionCreators","actionCreators","arguments","length","undefined","action","_toConsumableArray","console","error","reducers_loading","reducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Provider","subscribe","log","getState"],"mappings":"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","file":"static/js/main.0b879e4d.chunk.js","sourcesContent":["import React from 'react';\n\nconst WeatherCard = (props) => {\n  const temp = parseInt(props.weather.main.temp);\n  const icon = `https://openweathermap.org/img/w/${props.weather.weather[0].icon}.png`;\n  const click = () => {\n    props.getForecast(props.weather.id)\n  }\n  return (\n    <div className=\"col-sm-6 col-md-6 col-lg-3 mb15\">\n      <div className=\"weather-card\">\n        <div className=\"weather-card__city\">{props.weather.name}<span className=\"weather-card__country\">{props.weather.sys.country}</span></div>\n        <div className=\"weather-card__temp\">\n          <img src={icon} alt={props.weather.weather[0].main} title={props.weather.weather[0].description}/>\n          {temp} &#176;C\n        </div>\n        <div className=\"weather-card__options\">\n          <div className=\"weather-card__options-row\">\n            <div><span className=\"weather-card__option-name\">Clouds: </span>{props.weather.clouds.all}%</div>&nbsp;&nbsp;\n            <div><span className=\"weather-card__option-name\">Pressure: </span>{parseInt(props.weather.main.pressure)} hpa</div>\n          </div>\n          <div className=\"weather-card__options-row\">\n            <div><span className=\"weather-card__option-name\">Wind: </span>{props.weather.wind.speed} mps</div>\n            <div><span className=\"weather-card__option-name\">Humidity: </span>{props.weather.main.humidity} %</div>\n          </div>\n        </div>\n        <button  type=\"button\" className=\"btn btn-link\" onClick={click}>Load forecast</button>\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherCard;","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst WeatherForecast = (props) => {\n  const data= {\n    labels: props.forecast.list.map(el => el.dt_txt),\n    datasets: [{\n      label: 'temp',\n      backgroundColor: 'rgba(255, 255, 255, 0)',\n      borderColor: 'rgb(255, 99, 132)',\n      data: props.forecast.list.map(el => ({x: el.dt * 1000, y: el.main.temp})),\n    }]\n  }\n  const options = {\n    title: {\n      display: true,\n      text: '5 day weather forecast in ' + props.forecast.city.name\n    },\n    legend: {\n      display: false,\n      labels: {\n        padding: 0\n      }\n    },\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: {\n          unit: 'day'\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: (tooltipItem, data) => {\n          let label = data.datasets[tooltipItem.datasetIndex].label || '';\n          if (label) {\n            label += ': ';\n          }\n          label += Math.round(tooltipItem.yLabel * 10) / 10;\n          label += ' °C'\n          return label;\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"col animated fadeInUp\">\n      <div className=\"weather-forecast\">\n        <div className=\"weather-forecast__chart\">\n          < Line\n            data={data}\n            height={300}\n            options={options}\n            width={0}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherForecast;","import React from 'react';\n\nconst SearchPanel = function (props) {\n  const changeHandler = (e) => {\n    props.handler(e.target.value);\n  }\n  const selectHandler = (id, name) => {\n    return function () {\n      props.selectHandler(id);\n      document.getElementById('search-input').value = name;\n    }\n  }\n  const clearInput = () => {\n    document.getElementById('search-input').value = '';\n  }\n  return (\n    <div className=\"col mb20\">\n      <div className=\"input-group search-panel\">\n        <input type=\"text\" id=\"search-input\" onChange={changeHandler} onFocus={clearInput} className=\"form-control\" placeholder=\"Enter city name... (Search in demo mode, without api)\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"/>\n        <ul className=\"list-group list-group-flush search-panel__item-list\">\n          {props.items.map(el => <li className=\"list-group-item\" key={el.id} onClick={selectHandler(el.id, el.name)}>{el.name} ({el.country})</li>)}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchPanel;","const config = {\n  appId : '241b1e20275056594402b6f674110732'// https://openweathermap.org/appid#use\n}\n\nexport default config;","import axios from 'axios';\nimport config from './config/env'\nclass GetWeather {\n  constructor () {\n    this.appId = config.appId;\n  }\n\n  byName(city) {\n    return axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${this.appId}`)\n      .then(res => res.data);\n  }\n\n  byId(id) {\n    return axios.get(`https://api.openweathermap.org/data/2.5/weather?id=${id}&units=metric&appid=${this.appId}`)\n      .then(res => res.data);\n  }\n\n  byListIds(ids) {\n    return axios.get(`https://api.openweathermap.org/data/2.5/group?id=${ids}&units=metric&appid=${this.appId}`)\n      .then(res => res.data);\n  }\n\n  forecast5DaysById (id) {\n    return axios.get(`https://api.openweathermap.org/data/2.5/forecast?id=${id}&units=metric&appid=${this.appId}`)\n      .then(res => res.data);\n  }\n\n}\n\nexport default new GetWeather();","import GetWeather from './api'\n\nexport function loadWeatherByListIds(ids){\n  return function(dispatch) {\n    dispatch({type: 'LOADING_START'});\n    GetWeather.byListIds(ids).then(data => {\n      dispatch({type: 'LOADING_END'});\n      dispatch({type:'WEATHER_LIST_LOADED', data});\n    });\n  }\n}\n\nexport function loadForecast5DaysById(id){\n  return function (dispatch) {\n    dispatch({type: 'LOADING_START'})\n    GetWeather.forecast5DaysById(id).then(data => {\n      dispatch({type: 'LOADING_END'});\n      dispatch({type:'FORECAST_5_DAYS_LOADED', data});\n    });\n  }\n}\n\nexport function loadSearchedById(id){\n  return function (dispatch) {\n    dispatch({type: 'LOADING_START'});\n    GetWeather.byId(id).then(data => {\n      dispatch({type: 'LOADING_END'});\n      dispatch({type:'WEATHER_SEARCHED_ADD', data});\n    });\n  }\n}\n","const consts = {\n  searchedListSize: 7,\n  itemsOnPage: 4\n}\n\nexport default consts;","import consts from '../constants'\n\nclass SearchHelper {\n  constructor() {\n    this.consts = consts;\n    this.cities = [\n      {\n        'id': 707860,\n        'name': 'Hurzuf',\n        'country': 'UA',\n        'coord': {\n          'lon': 34.283333,\n          'lat': 44.549999\n        }\n      },\n      {\n        'id': 519188,\n        'name': 'Novinki',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.666668,\n          'lat': 55.683334\n        }\n      },\n      {\n        'id': 1283378,\n        'name': 'Gorkhā',\n        'country': 'NP',\n        'coord': {\n          'lon': 84.633331,\n          'lat': 28\n        }\n      },\n      {\n        'id': 1270260,\n        'name': 'State of Haryāna',\n        'country': 'IN',\n        'coord': {\n          'lon': 76,\n          'lat': 29\n        }\n      },\n      {\n        'id': 708546,\n        'name': 'Holubynka',\n        'country': 'UA',\n        'coord': {\n          'lon': 33.900002,\n          'lat': 44.599998\n        }\n      },\n      {\n        'id': 1283710,\n        'name': 'Bāgmatī Zone',\n        'country': 'NP',\n        'coord': {\n          'lon': 85.416664,\n          'lat': 28\n        }\n      },\n      {\n        'id': 529334,\n        'name': 'Mar’ina Roshcha',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.611111,\n          'lat': 55.796391\n        }\n      },\n      {\n        'id': 1269750,\n        'name': 'Republic of India',\n        'country': 'IN',\n        'coord': {\n          'lon': 77,\n          'lat': 20\n        }\n      },\n      {\n        'id': 1283240,\n        'name': 'Kathmandu',\n        'country': 'NP',\n        'coord': {\n          'lon': 85.316666,\n          'lat': 27.716667\n        }\n      },\n      {\n        'id': 703363,\n        'name': 'Laspi',\n        'country': 'UA',\n        'coord': {\n          'lon': 33.733334,\n          'lat': 44.416668\n        }\n      },\n      {\n        'id': 3632308,\n        'name': 'Merida',\n        'country': 'VE',\n        'coord': {\n          'lon': -71.144997,\n          'lat': 8.598333\n        }\n      },\n      {\n        'id': 473537,\n        'name': 'Vinogradovo',\n        'country': 'RU',\n        'coord': {\n          'lon': 38.545555,\n          'lat': 55.423332\n        }\n      },\n      {\n        'id': 384848,\n        'name': 'Qarah Gawl al ‘Ulyā',\n        'country': 'IQ',\n        'coord': {\n          'lon': 45.6325,\n          'lat': 35.353889\n        }\n      },\n      {\n        'id': 569143,\n        'name': 'Cherkizovo',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.728889,\n          'lat': 55.800835\n        }\n      },\n      {\n        'id': 713514,\n        'name': 'Alupka',\n        'country': 'UA',\n        'coord': {\n          'lon': 34.049999,\n          'lat': 44.416668\n        }\n      },\n      {\n        'id': 2878044,\n        'name': 'Lichtenrade',\n        'country': 'DE',\n        'coord': {\n          'lon': 13.40637,\n          'lat': 52.398441\n        }\n      },\n      {\n        'id': 464176,\n        'name': 'Zavety Il’icha',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.849998,\n          'lat': 56.049999\n        }\n      },\n      {\n        'id': 295582,\n        'name': '‘Azriqam',\n        'country': 'IL',\n        'coord': {\n          'lon': 34.700001,\n          'lat': 31.75\n        }\n      },\n      {\n        'id': 1271231,\n        'name': 'Ghūra',\n        'country': 'IN',\n        'coord': {\n          'lon': 79.883331,\n          'lat': 24.766666\n        }\n      },\n      {\n        'id': 690856,\n        'name': 'Tyuzler',\n        'country': 'UA',\n        'coord': {\n          'lon': 34.083332,\n          'lat': 44.466667\n        }\n      },\n      {\n        'id': 464737,\n        'name': 'Zaponor’ye',\n        'country': 'RU',\n        'coord': {\n          'lon': 38.861942,\n          'lat': 55.639999\n        }\n      },\n      {\n        'id': 707716,\n        'name': 'Il’ichëvka',\n        'country': 'UA',\n        'coord': {\n          'lon': 34.383331,\n          'lat': 44.666668\n        }\n      },\n      {\n        'id': 697959,\n        'name': 'Partyzans’ke',\n        'country': 'UA',\n        'coord': {\n          'lon': 34.083332,\n          'lat': 44.833332\n        }\n      },\n      {\n        'id': 803611,\n        'name': 'Yurevichi',\n        'country': 'RU',\n        'coord': {\n          'lon': 39.934444,\n          'lat': 43.600555\n        }\n      },\n      {\n        'id': 614371,\n        'name': 'Gumist’a',\n        'country': 'GE',\n        'coord': {\n          'lon': 40.973888,\n          'lat': 43.026943\n        }\n      },\n      {\n        'id': 874560,\n        'name': 'Ptitsefabrika',\n        'country': 'GE',\n        'coord': {\n          'lon': 40.290558,\n          'lat': 43.183613\n        }\n      },\n      {\n        'id': 874652,\n        'name': 'Orekhovo',\n        'country': 'GE',\n        'coord': {\n          'lon': 40.146111,\n          'lat': 43.351391\n        }\n      },\n      {\n        'id': 2347078,\n        'name': 'Birim',\n        'country': 'NG',\n        'coord': {\n          'lon': 9.997027,\n          'lat': 10.062094\n        }\n      },\n      {\n        'id': 2051302,\n        'name': 'Priiskovyy',\n        'country': 'RU',\n        'coord': {\n          'lon': 132.822495,\n          'lat': 42.819168\n        }\n      },\n      {\n        'id': 563692,\n        'name': 'Dzhaga',\n        'country': 'RU',\n        'coord': {\n          'lon': 42.650002,\n          'lat': 43.25\n        }\n      },\n      {\n        'id': 481725,\n        'name': 'Tret’ya Rota',\n        'country': 'RU',\n        'coord': {\n          'lon': 39.681389,\n          'lat': 43.741943\n        }\n      },\n      {\n        'id': 2638976,\n        'name': 'Ruislip',\n        'country': 'GB',\n        'coord': {\n          'lon': -0.42341,\n          'lat': 51.573441\n        }\n      },\n      {\n        'id': 2892705,\n        'name': 'Karow',\n        'country': 'DE',\n        'coord': {\n          'lon': 13.48117,\n          'lat': 52.609039\n        }\n      },\n      {\n        'id': 2922336,\n        'name': 'Gatow',\n        'country': 'DE',\n        'coord': {\n          'lon': 13.18285,\n          'lat': 52.483238\n        }\n      },\n      {\n        'id': 975511,\n        'name': 'Mkuze',\n        'country': 'ZA',\n        'coord': {\n          'lon': 32.038609,\n          'lat': -27.616409\n        }\n      },\n      {\n        'id': 1280737,\n        'name': 'Lhasa',\n        'country': 'CN',\n        'coord': {\n          'lon': 91.099998,\n          'lat': 29.65\n        }\n      },\n      {\n        'id': 745042,\n        'name': 'İstanbul',\n        'country': 'TR',\n        'coord': {\n          'lon': 28.983311,\n          'lat': 41.03508\n        }\n      },\n      {\n        'id': 3496831,\n        'name': 'Mao',\n        'country': 'DO',\n        'coord': {\n          'lon': -71.078133,\n          'lat': 19.551861\n        }\n      },\n      {\n        'id': 2017370,\n        'name': 'Russian Federation',\n        'country': 'RU',\n        'coord': {\n          'lon': 100,\n          'lat': 60\n        }\n      },\n      {\n        'id': 2045761,\n        'name': 'De-Friz',\n        'country': 'RU',\n        'coord': {\n          'lon': 131.991394,\n          'lat': 43.27861\n        }\n      },\n      {\n        'id': 1257986,\n        'name': 'Rumbak',\n        'country': 'IN',\n        'coord': {\n          'lon': 77.416664,\n          'lat': 34.049999\n        }\n      },\n      {\n        'id': 476350,\n        'name': 'Vavibet',\n        'country': 'RU',\n        'coord': {\n          'lon': 34.916668,\n          'lat': 67.933334\n        }\n      },\n      {\n        'id': 1343000,\n        'name': 'Surtagān Chib',\n        'country': 'PK',\n        'coord': {\n          'lon': 64.656113,\n          'lat': 26.474443\n        }\n      },\n      {\n        'id': 456169,\n        'name': 'Rīgas Rajons',\n        'country': 'LV',\n        'coord': {\n          'lon': 24.333332,\n          'lat': 57\n        }\n      },\n      {\n        'id': 475279,\n        'name': 'Verkhneye Shchekotikhino',\n        'country': 'RU',\n        'coord': {\n          'lon': 36.133331,\n          'lat': 53\n        }\n      },\n      {\n        'id': 711349,\n        'name': 'Bucha',\n        'country': 'UA',\n        'coord': {\n          'lon': 30.366671,\n          'lat': 50.583328\n        }\n      },\n      {\n        'id': 798544,\n        'name': 'Republic of Poland',\n        'country': 'PL',\n        'coord': {\n          'lon': 20,\n          'lat': 52\n        }\n      },\n      {\n        'id': 3094325,\n        'name': 'Kuchary',\n        'country': 'PL',\n        'coord': {\n          'lon': 19.383329,\n          'lat': 52.150002\n        }\n      },\n      {\n        'id': 6255149,\n        'name': 'North America',\n        'country': '',\n        'coord': {\n          'lon': -100.546883,\n          'lat': 46.073231\n        }\n      },\n      {\n        'id': 3575514,\n        'name': 'Brumaire',\n        'country': 'KN',\n        'coord': {\n          'lon': -62.73333,\n          'lat': 17.299999\n        }\n      },\n      {\n        'id': 1861387,\n        'name': 'Ishikawa-ken',\n        'country': 'JP',\n        'coord': {\n          'lon': 136.770493,\n          'lat': 36.77145\n        }\n      },\n      {\n        'id': 1857578,\n        'name': 'Matoba',\n        'country': 'JP',\n        'coord': {\n          'lon': 133.949997,\n          'lat': 34.25\n        }\n      },\n      {\n        'id': 1299298,\n        'name': 'Pya',\n        'country': 'MM',\n        'coord': {\n          'lon': 95.599998,\n          'lat': 21.51667\n        }\n      },\n      {\n        'id': 3256023,\n        'name': 'Kalanac',\n        'country': 'BA',\n        'coord': {\n          'lon': 18.78389,\n          'lat': 44.86861\n        }\n      },\n      {\n        'id': 2921044,\n        'name': 'Federal Republic of Germany',\n        'country': 'DE',\n        'coord': {\n          'lon': 10.5,\n          'lat': 51.5\n        }\n      },\n      {\n        'id': 2861876,\n        'name': 'Land Nordrhein-Westfalen',\n        'country': 'DE',\n        'coord': {\n          'lon': 7,\n          'lat': 51.5\n        }\n      },\n      {\n        'id': 802899,\n        'name': 'Mutaykutan',\n        'country': 'RU',\n        'coord': {\n          'lon': 47.660641,\n          'lat': 42.818859\n        }\n      },\n      {\n        'id': 523523,\n        'name': 'Nalchik',\n        'country': 'RU',\n        'coord': {\n          'lon': 43.618889,\n          'lat': 43.498058\n        }\n      },\n      {\n        'id': 546448,\n        'name': 'Kolganov',\n        'country': 'RU',\n        'coord': {\n          'lon': 40.066669,\n          'lat': 44.366669\n        }\n      },\n      {\n        'id': 500023,\n        'name': 'Rybatskiy',\n        'country': 'RU',\n        'coord': {\n          'lon': 44.166389,\n          'lat': 44.799171\n        }\n      },\n      {\n        'id': 2207349,\n        'name': 'Bellara',\n        'country': 'AU',\n        'coord': {\n          'lon': 153.149597,\n          'lat': -27.063919\n        }\n      },\n      {\n        'id': 7870412,\n        'name': 'Bartlett',\n        'country': 'ZA',\n        'coord': {\n          'lon': 28.25263,\n          'lat': -26.17061\n        }\n      },\n      {\n        'id': 961935,\n        'name': 'Rietfontein',\n        'country': 'ZA',\n        'coord': {\n          'lon': 29.200001,\n          'lat': -25.5\n        }\n      },\n      {\n        'id': 3371200,\n        'name': 'Hardap',\n        'country': 'NA',\n        'coord': {\n          'lon': 17.25,\n          'lat': -24.5\n        }\n      },\n      {\n        'id': 1016666,\n        'name': 'Botswana',\n        'country': 'ZA',\n        'coord': {\n          'lon': 30.533331,\n          'lat': -24.33333\n        }\n      },\n      {\n        'id': 3858204,\n        'name': 'El Destierro',\n        'country': 'AR',\n        'coord': {\n          'lon': -62.47662,\n          'lat': -24.1\n        }\n      },\n      {\n        'id': 4070245,\n        'name': 'Jones Crossroads',\n        'country': 'US',\n        'coord': {\n          'lon': -85.484657,\n          'lat': 31.21073\n        }\n      },\n      {\n        'id': 4344544,\n        'name': 'Vernon Parish',\n        'country': 'US',\n        'coord': {\n          'lon': -93.183502,\n          'lat': 31.11685\n        }\n      },\n      {\n        'id': 4215307,\n        'name': 'Pennick',\n        'country': 'US',\n        'coord': {\n          'lon': -81.55899,\n          'lat': 31.313\n        }\n      },\n      {\n        'id': 5285039,\n        'name': 'Black Bear Spring',\n        'country': 'US',\n        'coord': {\n          'lon': -110.288139,\n          'lat': 31.386209\n        }\n      },\n      {\n        'id': 4673179,\n        'name': 'Bee House',\n        'country': 'US',\n        'coord': {\n          'lon': -98.081139,\n          'lat': 31.40266\n        }\n      },\n      {\n        'id': 6078447,\n        'name': 'Morden',\n        'country': 'CA',\n        'coord': {\n          'lon': -98.101357,\n          'lat': 49.191898\n        }\n      },\n      {\n        'id': 2201316,\n        'name': 'Nasirotu',\n        'country': 'FJ',\n        'coord': {\n          'lon': 178.25,\n          'lat': -18.033331\n        }\n      },\n      {\n        'id': 1938756,\n        'name': 'Sisali',\n        'country': 'ID',\n        'coord': {\n          'lon': 124.531387,\n          'lat': -9.19167\n        }\n      },\n      {\n        'id': 2009359,\n        'name': 'Puntan',\n        'country': 'ID',\n        'coord': {\n          'lon': 110.553329,\n          'lat': -7.51944\n        }\n      },\n      {\n        'id': 2566086,\n        'name': 'Tsiémé-Mandiélé',\n        'country': 'CG',\n        'coord': {\n          'lon': 15.2875,\n          'lat': -4.22694\n        }\n      },\n      {\n        'id': 154733,\n        'name': 'Masama',\n        'country': 'TZ',\n        'coord': {\n          'lon': 37.183331,\n          'lat': -3.23333\n        }\n      },\n      {\n        'id': 1630349,\n        'name': 'Purukcahu',\n        'country': 'ID',\n        'coord': {\n          'lon': 114.583328,\n          'lat': -0.58333\n        }\n      },\n      {\n        'id': 2224928,\n        'name': 'Néméyong II',\n        'country': 'CM',\n        'coord': {\n          'lon': 13.5,\n          'lat': 2.91667\n        }\n      },\n      {\n        'id': 6716279,\n        'name': 'Pondok Genteng',\n        'country': 'ID',\n        'coord': {\n          'lon': 99.0709,\n          'lat': 3.2245\n        }\n      },\n      {\n        'id': 2384618,\n        'name': 'Mbongoté',\n        'country': 'CF',\n        'coord': {\n          'lon': 18.283331,\n          'lat': 4.25\n        }\n      },\n      {\n        'id': 378867,\n        'name': 'Amiling',\n        'country': 'SS',\n        'coord': {\n          'lon': 32.355831,\n          'lat': 4.19417\n        }\n      },\n      {\n        'id': 2230362,\n        'name': 'Kélkoto',\n        'country': 'CM',\n        'coord': {\n          'lon': 11.16667,\n          'lat': 4.43333\n        }\n      },\n      {\n        'id': 343846,\n        'name': 'Angetu',\n        'country': 'ET',\n        'coord': {\n          'lon': 39.48333,\n          'lat': 6.33333\n        }\n      },\n      {\n        'id': 370366,\n        'name': 'Massa',\n        'country': 'SD',\n        'coord': {\n          'lon': 29.466669,\n          'lat': 10.98333\n        }\n      },\n      {\n        'id': 365618,\n        'name': 'Tumko',\n        'country': 'SD',\n        'coord': {\n          'lon': 24.6,\n          'lat': 12.01667\n        }\n      },\n      {\n        'id': 524894,\n        'name': 'Moskva',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.606667,\n          'lat': 55.761665\n        }\n      },\n      {\n        'id': 1861060,\n        'name': 'Japan',\n        'country': 'JP',\n        'coord': {\n          'lon': 139.753098,\n          'lat': 35.68536\n        }\n      },\n      {\n        'id': 2130037,\n        'name': 'Hokkaidō',\n        'country': 'JP',\n        'coord': {\n          'lon': 141.346603,\n          'lat': 43.06451\n        }\n      },\n      {\n        'id': 6199126,\n        'name': 'Sanggrahan',\n        'country': 'ID',\n        'coord': {\n          'lon': 110.246109,\n          'lat': -7.46056\n        }\n      },\n      {\n        'id': 6388445,\n        'name': 'Karangmangle',\n        'country': 'ID',\n        'coord': {\n          'lon': 109.0075,\n          'lat': -7.43028\n        }\n      },\n      {\n        'id': 494806,\n        'name': 'Sheremetyevskiy',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.491112,\n          'lat': 55.98\n        }\n      },\n      {\n        'id': 467104,\n        'name': 'Yershovo',\n        'country': 'RU',\n        'coord': {\n          'lon': 36.858055,\n          'lat': 55.771111\n        }\n      },\n      {\n        'id': 462352,\n        'name': 'Znamenka',\n        'country': 'RU',\n        'coord': {\n          'lon': 35.981392,\n          'lat': 52.896671\n        }\n      },\n      {\n        'id': 2267057,\n        'name': 'Lisbon',\n        'country': 'PT',\n        'coord': {\n          'lon': -9.13333,\n          'lat': 38.716671\n        }\n      },\n      {\n        'id': 3082707,\n        'name': 'Walbrzych',\n        'country': 'PL',\n        'coord': {\n          'lon': 16.284321,\n          'lat': 50.771412\n        }\n      },\n      {\n        'id': 3091150,\n        'name': 'Naklo nad Notecia',\n        'country': 'PL',\n        'coord': {\n          'lon': 17.60181,\n          'lat': 53.142139\n        }\n      },\n      {\n        'id': 1784658,\n        'name': 'Zhengzhou',\n        'country': 'CN',\n        'coord': {\n          'lon': 113.648613,\n          'lat': 34.757778\n        }\n      },\n      {\n        'id': 7301040,\n        'name': 'Tonyrefail',\n        'country': 'GB',\n        'coord': {\n          'lon': -3.41503,\n          'lat': 51.580238\n        }\n      },\n      {\n        'id': 1348747,\n        'name': 'Bankra',\n        'country': 'IN',\n        'coord': {\n          'lon': 88.298058,\n          'lat': 22.627501\n        }\n      },\n      {\n        'id': 6255148,\n        'name': 'Europe',\n        'country': '',\n        'coord': {\n          'lon': 9.140625,\n          'lat': 48.69096\n        }\n      },\n      {\n        'id': 524925,\n        'name': 'Moskovskaya Oblast’',\n        'country': 'RU',\n        'coord': {\n          'lon': 37.628334,\n          'lat': 55.75639\n        }\n      },\n      {\n        'id': 4047656,\n        'name': 'Provo',\n        'country': 'US',\n        'coord': {\n          'lon': -94.107697,\n          'lat': 34.037609\n        }\n      },\n      {\n        'id': 5493998,\n        'name': 'Tejon',\n        'country': 'US',\n        'coord': {\n          'lon': -105.28611,\n          'lat': 34.58979\n        }\n      },\n      {\n        'id': 1463749,\n        'name': 'Guliston',\n        'country': 'UZ',\n        'coord': {\n          'lon': 65.518929,\n          'lat': 38.510029\n        }\n      },\n      {\n        'id': 749184,\n        'name': 'Ciciler',\n        'country': 'TR',\n        'coord': {\n          'lon': 30.063601,\n          'lat': 40.442982\n        }\n      },\n      {\n        'id': 750594,\n        'name': 'Bilmece',\n        'country': 'TR',\n        'coord': {\n          'lon': 36.150002,\n          'lat': 41.150002\n        }\n      },\n      {\n        'id': 3113208,\n        'name': 'Provincia de Pontevedra',\n        'country': 'ES',\n        'coord': {\n          'lon': -8.5,\n          'lat': 42.5\n        }\n      },\n      {\n        'id': 2653753,\n        'name': 'Carmarthenshire',\n        'country': 'GB',\n        'coord': {\n          'lon': -4.16667,\n          'lat': 51.833328\n        }\n      },\n    ]\n  }\n  searchByName(string) {\n    if (string) {\n      const str = new RegExp('^' + string.trim());\n      const arr = this.cities.filter(el => str.test(el.name.toLowerCase()));\n      return arr.slice(0, this.consts.searchedListSize);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport default new SearchHelper();","import {connect} from 'react-redux';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\n\nimport WeatherCard from './components/WeatherCard';\nimport WeatherForecast from './components/WeatherForecast';\nimport SearchPanel from './components/SearchPanel';\nimport * as actionCreators from './actions';\nimport searchHelper from './helpers/search.helper';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSearchInput = this.handleSearchInput.bind(this);\n    this.handleSelectedCity = this.handleSelectedCity.bind(this);\n    this.items = [];\n    this.state = {searched: []};\n  }\n  handleClick (id) {\n    this.props.actions.loadForecast5DaysById(id);\n  }\n  handleSearchInput(value) {\n    this.setState({searched: searchHelper.searchByName(value)});\n  }\n  handleSelectedCity(id) {\n    this.setState({searched: []});\n    this.props.actions.loadSearchedById(id);\n  }\n  componentWillMount() {\n    this.props.actions.loadWeatherByListIds('524894,491422,1496747,498817');\n  }\n  render() {\n    const loading = this.props.loading ? <div className=\"loading\"><div className=\"spinner-border text-primary load-spinner\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div></div> : '';\n    const weatherList = this.props.weather.map(item => {\n      return (<WeatherCard key={item.id} weather={item} getForecast={this.handleClick}/>)\n    })\n    const weatherForecast = this.props.forecast ? <WeatherForecast forecast={this.props.forecast} /> : '';\n    return (\n      <div className=\"container app-container\">\n        <div className=\"row\">\n          <div className=\"col mb20 mt20\">\n            <h1>World weather demo</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <SearchPanel items={this.state.searched} handler={this.handleSearchInput} selectHandler={this.handleSelectedCity}/>\n        </div>\n        <div className=\"row\">{weatherList}</div>\n        <div className=\"row\">{weatherForecast}</div>\n        {loading}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  (state) => ({\n    weather: state.weather,\n    loading: state.loading,\n    forecast: state.forecast\n  }),\n  (dispatch) => ({actions: bindActionCreators(actionCreators, dispatch)}),\n)(App);\n","import consts from '../constants'\n\nexport default function(state = [], action) {\n  switch (action.type) {\n  case 'WEATHER_LOADED':\n    return [...state, action.data];\n  case 'WEATHER_LIST_LOADED':\n    return [...state, ...action.data.list];\n  case 'WEATHER_SEARCHED_ADD':\n    return state.length < consts.itemsOnPage ? [...state, action.data] : [...state.slice(1), action.data]\n  case 'WEATHER_LOAD_FAILURE':\n    console.error('ERROR:', action.error)\n    return state;\n  default:\n    return state;\n  }\n}","export default function(state = [], action) {\n  switch (action.type) {\n  case 'LOADING_START':\n    return true;\n  case 'LOADING_END':\n    return false;\n  default:\n    return state;\n  }\n}","import consts from '../constants'\n\nexport default function(state = [], action) {\n  switch (action.type) {\n  case 'FORECAST_5_DAYS_LOADED':\n    return action.data;\n  case 'FORECAST_LOAD_FAILURE':\n    console.error('ERROR:', action.error)\n    return state;\n  default:\n    return state;\n  }\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport * as reducers from './reducers';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst reducer = combineReducers(reducers);\n\nconst initialState = {\n  weather: [],\n  forecast: null,\n  loading: false\n}\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport store from './state';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/style.css'\nimport 'animate.css/animate.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n\t  <App />\n  </Provider>, document.getElementById('root'));\nstore.subscribe(() => {\n  console.log('New state: ', store.getState());\n});\n\n"],"sourceRoot":""}